# Generated by Django 4.2.6 on 2023-10-27 13:05

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="OEDIBuildingEnergyUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "folder_release_name",
                    models.CharField(
                        choices=[
                            ("building_energy_models", "Building Energy Models"),
                            ("geographic_information", "Geographic Information"),
                            ("metadata", "Metadata"),
                            ("timeseries_aggregates", "Timeseries Aggregates"),
                            (
                                "timeseries_aggregates_metadata",
                                "Timeseries Aggregates Metadata",
                            ),
                            (
                                "timeseries_individual_buildings",
                                "Timeseries Individual Buildings",
                            ),
                            ("weather", "Weather"),
                            ("citation", "Citation"),
                            ("data_dictionary", "Data Dictionary"),
                            ("enumeration_dictionary", "Enumeration Dictionary"),
                            ("upgrade_dictionary", "Upgrade Dictionary"),
                            ("upgrades_lookup", "Upgrades Lookup"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        help_text="The name of the folder release that the data came from.",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "location_classification",
                    models.CharField(
                        choices=[
                            ("county", "County"),
                            ("state", "State"),
                            ("midwest", "Midwest"),
                            ("northeast", "Northeast"),
                            ("south", "South"),
                            ("west", "West"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        help_text="The geographic classification of the location (e.g. county, state, etc.)",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "location_name",
                    models.CharField(
                        help_text="The name of the specific location.", max_length=100
                    ),
                ),
                (
                    "building_id",
                    models.CharField(
                        help_text="The unique identifier for the building.",
                        max_length=100,
                    ),
                ),
                (
                    "upgrade_type",
                    models.CharField(
                        choices=[
                            ("baseline", "Baseline"),
                            ("upgrade", "Upgrade"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        help_text="The type of building upgrade (baseline or upgrade).",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        help_text="The date and time of the energy data for the given building."
                    ),
                ),
                (
                    "district_cooling_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "district_heating_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "district_heating_water_systems_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_cooling_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_exterior_lighting_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_fans_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_heat_recovery_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_heat_rejection_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_heating_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_interior_equipment_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_interior_lighting_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_pumps_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_refrigeration_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_water_systems_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "natural_gas_heating_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "natural_gas_interior_equipment_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "natural_gas_water_systems_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "district_cooling_total_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "district_heating_total_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_total_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "natural_gas_total_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "other_fuel_heating_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "other_fuel_water_systems_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "other_fuel_total_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "site_energy_total_energy_consumption",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "district_cooling_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "district_heating_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "district_heating_water_systems_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_cooling_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_exterior_lighting_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_fans_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_heat_recovery_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_heat_rejection_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_heating_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_interior_equipment_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_interior_lighting_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_pumps_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_refrigeration_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_water_systems_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "natural_gas_heating_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "natural_gas_interior_equipment_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "natural_gas_water_systems_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "district_cooling_total_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "district_heating_total_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "electricity_total_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "natural_gas_total_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "other_fuel_heating_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "other_fuel_water_systems_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "other_fuel_total_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "site_energy_total_energy_consumption_intensity",
                    models.FloatField(blank=True, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
